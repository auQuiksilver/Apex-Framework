/*/
File: server.cfg
Author:

	Quiksilver
	
Last Modified:

	28/04/2023 A3 2.12 by Quiksilver
	
Description:

	http://community.bistudio.com/wiki/server.cfg
	
Instructions:

	0. set hostname, under GENERAL SETTINGS
	1. set password, under GENERAL SETTINGS
	2. set passwordAdmin, under GENERAL SETTINGS
	3. set maxPlayers, under GENERAL SETTINGS
	4. set steamPort + steamQueryPort if necessary
	5. set Mission Template, under MISSION WHITELIST
	6. set missionWhitelist[], make sure correct pbo is added with given format
	7. set forcedDifficulty = "Custom";
	8. set serverCommandPassword under SECURITY. Note, this must match up with serverCommandPassword function in mod file.
____________________________________________________________/*/

//======================================================= GENERAL SETTINGS

hostname = "Invade & Annex: Apex Edition";    						// Name of the server displayed in the public server list
password = "";     													// Password required to join the server
passwordAdmin = "123abc";      									// Password to login as admin. Open the chat and type: #login password
serverCommandPassword = "abc123";							// Password required by server to execute commands
admins[] = {"76561100000000000","76561100000000000"};				// UIDs authorized to log in as admin on server
filePatchingExceptions[] = {"76561100000000000","76561100000000000"};
maxPlayers = 50;    												// Maximum amount of players, including headless clients. Anybody who joins the server is considered a player, regardless of their role or team.
persistent = 1;     												// If set to 1, missions will continue to run after all players have disconnected; required if you want to use the -autoInit startup parameter
statisticsEnabled = 1;                                        		// BIS Analytics
callExtReportLimit = 1000.0;										// If server initiated callExtension takes longer than specified limit in milliseconds, the warning will be logged into server .rpt file as well as reflected in the extension return result. Default: 1000.0
skipLobby = FALSE;													// If true, joining player will skip role assignment lobby menu.
class AdvancedOptions {
	LogObjectNotFound = FALSE; 										// Skip logging "Server: Object not found" messages
	SkipDescriptionParsing = FALSE;									// parse description.ext
	ignoreMissionLoadErrors = FALSE;								// do not ignore errors
};

//======================================================= GAMEPLAY

forceRotorLibSimulation = 0;										// Enforces the Advanced Flight Model on the server. Default = 0 (up to the player). 1 - forced AFM, 2 - forced SFM.
drawingInMap = 1;													// Enables or disables the ability to draw lines in map. Default = 1 (since Arma 3 1.63+).
allowProfileGlasses = FALSE;										// 	If false, glasses set in player profile will be ignored.
zeusCompositionScriptLevel = 0;										// 0: all scripts are forbidden - 1: only attributes are allowed (including custom attributes added by mods) - 2: all scripts are allowed including init scripts

//======================================================= CLIENT STABILITY + ADMINISTRATION

kickTimeout[] = {													// Kick type, plus duration of kick until they can return (like temporary ban for X seconds). Format:   {<kick type> , <duration in seconds>}   If duration is -1, duration is mission end. If duration is -2, duration is until server restart.
	{0, 0}, 														// 0 - manual kick (vote kick, admin kick, bruteforce detection etc.)
	{1, 0}, 														// 1 - connectivity kick (ping, timeout, packetloss, desync)
	{2, 0}, 														// 2 - BattlEye kick
	{3, 0} 															// 3 - harmless kick (wrong addons, steam timeout or checks, signatures, content etc.)
};
kickClientsOnSlowNetwork[] = {0,0,0,0};								// Defines if {<MaxPing>, <MaxPacketLoss>, <MaxDesync>, <DisconnectTimeout>} will be logged (0) or kicked (1) (since Arma 3 1.56+)
maxPing = 350;														// Max ping value until server kick the user (since Arma 3 1.56+)
maxPacketLoss = 50;													// Max packetloss value until server kick the user (since Arma 3 1.56+)
maxDesync = 150;													// Max desync value until server kick the user (since Arma 3 1.56+)
disconnectTimeout = 90;												// Server wait time before disconnecting client, default 90 seconds, range 5 to 90 seconds. (since Arma 3 1.56+)
roleTimeOut = 90;
briefingTimeOut = 60;
lobbyIdleTimeout = 300;
armaUnitsTimeout = 30;												// Defines how long the player will be stuck connecting and wait for armaUnits data. Player will be notified if timeout elapsed and no units data was received
enablePlayerDiag = 0;												// 	Logs players' bandwidth and desync info every 60 seconds, as well as "network message is pending" owner identity.

//======================================================= VOTING

voteMissionPlayers = 1;       										// Minimum number of players required before displaying the mission selection screen, if you have not already selected a mission in this config
voteThreshold = 9999;    											// Percentage (0.00 to 1.00) of players needed to vote something into effect, for example an admin or a new mission. Set to 9999 to prevent random players being voted as admins.
VoteThresholdSameSide = 9999;
allowedVoteCmds[] = {};												// https://community.bistudio.com/wiki/Arma_3:_Mission_voting
allowedVotedAdminCmds[] = {};										// https://community.bistudio.com/wiki/Arma_3:_Mission_voting
votingTimeOut = 60;

//======================================================= VOICE CHAT

disableVoN = 0;     												// If set to 1, voice chat will be disabled
disableChannels[]={{0,TRUE,TRUE},{1,TRUE,TRUE},{2,FALSE,FALSE},{3,FALSE,FALSE},{4,FALSE,FALSE},{5,FALSE,FALSE}};
vonCodecQuality = 10;    											// Supports range 1-30; 1-10 is 8kHz (narrowband), 11-20 is 16kHz (wideband), 21-30 is 32kHz (ultrawideband); higher = better sound quality, more bandwidth consumption
vonCodec = 1;                                                                                                  // Experimental Opus VON codec

//======================================================= STEAM

upnp = TRUE;
steamPort = 2302;     												// default 8766, needs to be unique if multiple serves on same box
steamQueryPort = 2402;    											// default 27016, needs to be unique if multiple servers on same box
steamProtocolMaxDataSize = 1024;

//======================================================= HEADLESS CLIENT	https://community.bistudio.com/wiki/Arma_3_Headless_Client

headlessClients[] = {"192.168.1.1"};				       				// Valid Headless Client IPs
localClient[] = {"192.168.1.1"};										// Client IPs to assign unlimited bandwidth
loopback = FALSE;														// Adding this option will force server into LAN mode. This will allow multiple local instances of the game to connect to the server for testing purposes. At the same time it will prevent all non-local instances from connecting.

//======================================================= WELCOME MESSAGE ("message of the day")

motd[] = {};														// Use "chatMessages.sqf" instead
motdInterval = 20;    												// Number of seconds between each message

//======================================================= MISSION

autoSelectMission = TRUE;
randomMissionOrder = FALSE;
forcedDifficulty = "Custom";
class Missions {
	class apex_framework {
		//template = "Apex_framework_151.Tanoa";				// Select only 1
		template = "Apex_framework_151.Altis";					// Select only 1
		//template = "Apex_framework_151.Malden";				// Select only 1
		//template = "Apex_framework_151.Enoch";				// Select only 1
		//template = "Apex_framework_151.Stratis";				// Select only 1
		difficulty = "Custom";
	};
};
missionWhitelist[] = {
	"Apex_framework_151.Altis",
	"Apex_framework_151.Tanoa",
	"Apex_framework_151.Malden",
	"Apex_framework_151.Enoch",
	"Apex_framework_151.Stratis"
};

//======================================================= LOGGING
	
timeStampFormat = "short";                							 // Timestamp format used in the server RPT logs. Possible values are "none" (default), "short", "full"
logFile = "server_console.log";   									 // Server console output filename

//======================================================= SECURITY		https://community.bistudio.com/wiki/Arma_3:_Server_Security

allowed_file_patching=0;
equal_mod_required=FALSE;
equalModRequired = 0;
BattlEye = 1;    													// If set to 1, BattlEye Anti-Cheat will be enabled on the server (default: 1, recommended: 1)
verifySignatures = 2;    											// If set to 2, players with unknown or unsigned mods won't be allowed join (default: 0, recommended: 2)
kickDuplicate = 1;    												// If set to 1, players with an ID that is identical to another player will be kicked (recommended: 1)
regularCheck = "";
battleyeLicense = 1;
allowedFilePatching = 0;											// Prevent or allow file patching for the clients (including the HC) (since Arma 3 1.49+). 0 = no clients, 1 = headless client only, 2 = all clients.
allowedLoadFileExtensions[] = {"wav","sqf"};								// only allow files with those extensions to be loaded via loadFile command (since Arma 3 v1.19.124216) 
allowedPreprocessFileExtensions[] = {"sqf"};						// only allow files with those extensions to be loaded via preprocessFile/preprocessFileLineNumber commands (since Arma 3 v1.19.124323)
allowedHTMLLoadExtensions[] = {};									// only allow files with those extensions to be loaded via HTMLLoad command (since Arma 3 v1.27.126715)
allowedHTMLLoadURIs[] = {};											// Uncomment to define server-level restrictions for URIs

//======================================================= EVENT SCRIPTS 	http://community.bistudio.com/wiki/ArmA:_Server_Side_Scripting

onUserConnected = "";    											// command to run when a player connects
onUserDisconnected = "";   											// command to run when a player disconnects
doubleIdDetected = "";    											// command to run if a player has the same ID as another player in the server
onUnsignedData = "kick (_this select 0)";    						// command to run if a player has unsigned files
onHackedData = "kick (_this select 0)";    							// command to run if a player has tampered files
onDifferentData = "kick (_this select 0)";							// data with a valid signature, but different version than the one present on server detected